// 27-05-2018
1. Lifecycle Hooks
A component has a lifecycle managed by Angular.
Angular create it, renders it, creates and renders its children, checkes it when its data-bound(বাধ্য, নিবন্ধিত) properties change, and destroys(ধ্বংস) it berfor removing it from the DOM. 

2. Component lifecycle hooks overview

3. Lifecycle sequence
    After creating a component/directive by calling its constructor, Angular calls the lifecycle hook methods in the following sequence at specific moments.

    ngOnChange() : Respond when Angular(rs) sets data-bound input properties. The method receives a SimpleChanges object of current and previous property values. called befor ngOnInit() and whenever one or more data-bound imput properties change. 

    ngOnInit(): initialize(আরম্ভ) the directive/component after Angular first displays the data-bound properties and sets the directive/component's input propeties. called once, after the first ngOnChange().

    ngDoCheck(): Detect(সন্ধান করে বার করা) and act(কাজ) upon(উপরে) changes that Angular can't or won't detact on its own. Called during every change detection run, immediately after ngOnChanges() and ngOnInit(). 

    ngAfterContentInit(): Respond  after Angular projects external content into the component's view / the view that a directive is in. called once after the first ngDoCheck(). 

    ngAfterContentChecked(): Respond after Angular checks the content projected(অভিক্ষিপ্ত) into the directive/component. Called after the ngAfterContenInit() and every subsequent ngDoCheck(). 

    ngAfterViewInit(): Respond after Angular initializes the component's views and child views/ the view that a directive is in. Called once after the first ngAfterContentChecked().

    ngAfterViewChecke(): 
