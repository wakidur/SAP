cohesive(সংযোজক)
hierarchy (ক্রমোচ্চ শ্রেণীবিভাগ)
/****************** 13-05-2019 *******************/ 
Introduction to modules

    Angular apps are modular and Angular has its own modularity system called NgModules. NgModules are containers for a cohesive block of code dedicated to an application domain, a workflow, or a closely related set of capabilities. 


    1.1. NgModule metadata
        An NgModule is defined by a class decorated with @NgModule().The @NgModule() decorator is a function that takes a single metadata object, whose properties describe the module. The most important properties are as follows.

        declarations: The components, directives, and pipes that belong to this NgModule.
        
        exports: The subset of declarations that should be visible and usable in the component templates of other NgModule. 

        imports: Other modules whose exported classes are needed by component templates declared in this NgModule. 

        providers: Creators of services that this NgModule contributes to the global collection of services; they become accessible in all parts of the app. (you can also specify providers at the component level, which is often preferred.)

    
    1.2. NgModules and components
        NgModules Provide a compilation context for their components. A root NgMoulde always has a root component that is created during bootstrap, but any NgModule can include any number of additional components, which can be loaded through the router or created through the template. 

/****************** 14-05-2019 *******************/ 
    1.3. NgModules and JavaScript modules

/****************** 14-05-2019 *******************/ 
        In JavaScript each file is a module and all object defined in the file belong to that module. The module declares some objects to be public by marking them with the export key word. 
        

Event ID: CRO-9743-EBTM