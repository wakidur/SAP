//10-07-2018-----------------
terminates(বন্ধ)

5. Building a data model with MongoDB and Mongoose
    5.1   Connecting the Express application to MongoDB using Mongoose
        5.1.1   Adding Mongoose to our application
            "dependencies": {
                    "body-parser": "~1.15.2",
                    "cookie-parser": "~1.4.3",
                    "debug": "~2.2.0",
                    "express": "~4.14.0",
                    "morgan": "~1.7.0",
                    "pug": "~2.0.0-beta6",
                    "serve-favicon": "~2.3.0"
                    "mongoose": "^4.9.1"
                }
       
        5.1.2   Adding a Mongoose connection to our application
            MongoDB and Mongoose connection
                Mongoose opens a pool of five reusable connections when it connects to a MongoDB
                database. This pool of connections is shared between all requests. Five is just the
                default number and can be increased or decreased in the connection options if you
                need to.
                    BEST-PRACTICE TIP

            Setting up the connection file
            Creating the Mongoose connection
                mongodb://username:password@localhost:27027/database

                (mongodb)MongoDB protocol 
                (username:password)Login credentials for database
                (localhost)Server address
                (27027)Port
                (database)Database name

                *** The username, password, and port are all optional


            Monitoring the connection with Mongoose connection events
            Closing a Mongoose connection
                Closing the Mongoose connection when the application stops is as much a part of the best practice as opening the connection when it starts. 
                The connection has two ends: 
                one in your application and 
                one in MongoDB.
                MongoDB needs to know when you want to close the connection so that it doesn’t keep redundant connections open.

                To monitor when the application stops we need to listen to the Node.js process, listening for an event called SIGINT.

            Capturing the process termination events
            Complete connection file

//11-07-2018-----------------

    5.2   Why model the data?
        5.2.1   What is Mongoose and how does it work?
            Mongoose was built specifically as a MongoDB Object-Document Modeler (ODM) for Node applications. One of the key principles is that you can manage your data model from within your application. 

            First off, let's get some naming convention out of the way 
            1. In MongoDB each entry in a database is called a document.
            2. In MongoDB a collection of documents is called a collection
            3. In MongoDB the definition of a document is called a schema
            4. Each individual data entity defined in a schema is called a path

            How does Mongoose model data?
            Breaking down a schema path
                Allowed schema types
                    String
                    Number
                    Date
                    Boolean
                    Buffer
                    Mixed
                    Array
                    ObjectI

    5.3   Defining simple Mongoose schemas
        5.3.1   The basics of setting up a schema
            const locationSchema = new mongoose.Schema({ });
        
            Defining a schema from controller data




