-----------------CHAPTER 4 Modules--------------
06-02-2018-----
Modules are reusable(পুনর্ব্যবহারযোগ্য) software components that form(গঠন) the building(ভবন) blocks(ব্লক) of applications.

=> There are several ways to define modules in JavaScript.
    1. Module pattern
    2. CommonJS modules (the inspiration for Node modules),
    3. AMD (Asynchronous Module Definition)

/******* Principles of Modularity ***//
You can think of modules as small, independent applications that are fully functional  and fully testable in their own right. 

Modules should be 
1. Specialized
2. independent
3. Decomposable
4. Recomposable
5. Substitutable

/******************--------Interfaces-----------***************/
Interfaces are one of the primary tools of modular software design. Interfaces define a contract(চুক্তি) that an implementing module will fulfill.

A better alternative(বিকল্প) is to create a standard interface to provide data access(প্রবেশ) for the post module.
That way, the module can save data using the same interface, regardless of(নির্বিশেষে, মনোযোগ বিনা) where the data is being(হচ্ছে) stored.

Other languages have native support for interfaces that may enforce that requirements of an interface. You might know them as abstract base classes or pure virtual functions.

