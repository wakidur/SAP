/***----------------------CHAPTER 2---------------
**------------------------Functions---------------
*/
Recursion
https://medium.com/functional-javascript/recursion-282a6abbf3c5

/** ======================Introduction ================== */

leverage(উদ্দেশ্যসাধনের উপায়)
Functions are the building blocks of applications.
JavaScript supports
    a. first-class functions
    b. functions as objects
    c. runtime function definition

------------------------------------------------------------
/** ======================Function Definition  ================== */
23-1-2018
deprecated(অননুমোদিত।)
caution(সাবধানতা)
strictly(যথাযথভাবে)
illustration(চিত্রণ)

// Function declaration
function foo() {
    return "Hello";
}
foo() // return value "Hello"

foo() is a function declaration

Function declaration tends(তত্ত্বাবধান করা, সহায়ক হত্তয়া) to encourage(উত্সাহিত করা) large piles(পাইলস, গাদা) of loosely(স্বাধীনভাবে, ঢিলেঢালাভাবে) related functions to grow in your module, with no real hints(নির্দেশ) about what goes where, whether it’s public or private, or how the functions work together

//Function Expression
var bar = function () {
return arguments.callee;
};
bar(); //=> [Function] (Note: It's anonymous.)

The advantage of function expressions
a. you can assign functions to variables the same way you would assign values to variables.

b. You can "count on"(নির্ভর করা) function expressions to follow your application logic reliably.

c. If you want to do a conditional assignment, it will work as expected.
d.

24-1-2018---------
exhibits(চিত্র প্রদর্শনীতেও)
bulky(ভারী)
The advantage of Function Expression
1. Function expressions assigned to object literals are sometimes called method literals
Methods are functions attached to objects.
2. 

/*====================Named Function Expressions====================
conditional(শর্তাধীন)
stack(গাদা)
traces(	 সন্ধান)

Named function expressions are like anonymous function expressions in every way(নামকরণ ফাংশন এক্সপ্রেশন প্রতিটি উপায়ে বেনামী ফাংশন এক্সপ্রেশন মত হয়)
except(ছাড়া) that they have a name that you can use from inside(ভিতর থেকে
) the function (for recursion). That name also conveniently(সুবিধামত) appears(প্রতীয়মান হত্তয়া
) in the function call stack.



25-01-2018---
/*=========================Recursion=================*/
/*---------------------Recursion, Tail Calls, Proper Tail Calls, Example----------------
Recursion is the process in which a function is called by itself, either directly or indirectly.
    a. Every recursive function must have a break condition. Otherwise calling the function will lead to an infinite loop.
1. Tail(None: কোন কিছুর পশ্চাদ্বর্তী অংশ ,লেঙ্গুড়, Varb:অনুসরণ করা,লেজ লাগাইয়া দেত্তয়া ) Call
2. Proper Tail Call





pitfal(	ভ্রম, ভুল, গুপ্ত বিপদ)

26-01-2018----------









-------------------------------------------------------------------
*****************Lambdas****************
A lambda is a function that is used as data. As such, it can be used the same way any
other expression can: as a parameter for another function, the return value of a function,
or anywhere you might use a literal value.

Example:
var sum = function sum() {
    var result = 0;
    [5, 5, 5].forEach(function addTo(number) { 
        result += number; 
        });
    return result;
};
The .addTo() function passed into .forEach() is a lambda.

**Lambdas are frequently confused with 
1.anonymous functions, 
2. closures, 
3. first-class functions, 
4. higher order functions. 
The concepts are all similar, but they mean different things