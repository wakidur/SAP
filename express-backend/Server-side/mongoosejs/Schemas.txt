http://mongoosejs.com/docs/guide.html
1.Schemas
	1.2 Defining your schema
		Everything in Mongoose starts with a Schema. Each schema maps to a MongoDB collection and defines the shape(আকৃতি) of the documents within that collection.
		
		The Primitted SchemaTypes are 

			a. String
			b. Number
			c. Data
			d. Buffer
			e. Boolean 
			f. Mixed
			g. ObjectId
			h. Array
		
		Schemas not only define the structure of your document and casting of properties, they also define documents 
			instance methodes,
        static Model methodes,
        compound indexes,
        document lifecycle hooks called middleware.
	
	1.3 Creating a model
		To use our schema definition, we need to convert our blogSchema into a Model 
		
	1.4 Instance methods
		Instance of Models are documents. Documents have many of their own built-in instance method. we may also define our own custom document instance methods too.
		
	1.5 Statics
		Adding static methods to a Model is simple as well. 
	
	1.6 Query Helpers
		You can also add query helper functions, which are like instance methods but for mongoose queries. Query helper methods let you extend mongoose's chainable query builder API.
	
	1.7 Indexes
		MongoDB supports secondary indexes. With mongoose, we define these indexes within our Schema at the path level or the schema level. Defining indexes at the schema level is necessary when creating compound indexes.
	
	1.8 Virtuals
		Virtuals are document properties that you can get and set but that do not get persisted (স্থায়ী অবস্থায় থাকা,  অবিরত লাগিয়া থাকা) to MongoDB. The getters are useful for formatting or combining fields, while setters are useful for de-composing(গলা) a single value into multiple values for storage.
		